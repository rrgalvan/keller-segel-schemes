// Keller-Segel Italy-Spanish project

//load "iovtk";
include "getARGV.idp";

verbosity = getARGV("-verb", 0);
int textVerbosity = 1;

// Mesh and finite element spaces
int nx = getARGV("-nx",40); // Number of mesh subdivisions
mesh Th = square(nx, nx, [pi*x, pi*y]);

plot(Th, wait=1);

fespace Vh(Th,P1);
Vh u, u0, bu; // Solution at t_{n+1}, t_n, test function.
Vh v, v0, bv; // Solution at t_{n+1}, t_n, test function.

macro grad(u) [ dx(u), dy(u) ] // End of Macro
// Time parameters
real t = 0;
int nt = getARGV("-nt",40); // Number of time iterations
real dt = getARGV("-dt", 1.e-1); // Time step

// Maximum plot vectors
real[int] xx(nt+1), yyu(nt+1),yyv(nt+1);
xx[0]=0;
// Keller-Segel data

real k1=0.2;
real k2=1;
real k3=0.1;
real k4=1;

real integral;

func uExact = 2 + exp(-2*t)*cos(x)*cos(y);
func vExact = uExact;
func f = -( 4*exp(2*t) * cos(x+y)
	    + cos(2*x)/2 + cos(2*y)/2
	    + cos(2*x + 2*y) ) * exp(-4*u);

u0 = uExact; // Proyection of uExact at t=0
v0 = vExact; // Proyection of vExact at t=0

yyu[0]=abs(u0[].max);
yyv[0]=abs(v0[].max);

integral=int2d(Th)(u0);

cout <<"La integral del dato inicial es "<<integral<< "y 4pi es  " << 4*pi << endl;


// Variational problem

problem KellerSegelU(u,bu)=
int2d(Th) (
	u*bu/dt+grad(u)'*grad(bu))
- int2d(Th)(
	u0*bu/dt
	+ k1*u0*grad(v0)'*grad(bu)
	);

problem KellerSegelV(v,bv) =
	   int2d(Th)(
		  v*bv/dt
		  + k2*grad(v)'*grad(bv)
		   )
	  - int2d(Th)(
		   v0*bv/dt
		   + k4*u0*bv
		   - k3*v0*bv
		    );

// Time loop


// savevtk ("VTK-K-S1/K-S0.vtk",Th,u0,v0,dataname ="u v");

for (int k=1; k<=nt; k++){
  t=t+dt;
  if(textVerbosity>0) cout << "Solving, iter: " << k << " (t=" << t << ")" << endl;

  KellerSegelV;
  KellerSegelU;

  u0 = u;  // For next iteration
  v0 = v;  // For next iteration

  plot(u, value=1, fill=1, dim=3);

  cout << "  max(u): " << u[].max << ", ";
  cout << "  min(u): " << u[].max << endl;
  xx[k]=dt*k;
  yyu[k]=u0[].max;

  cout << "  max(v): " << v[].max << endl;
  yyv[k]=v0[].max;

  cout.flush;
// savevtk ("VTK-K-S1/K-S"+k+".vtk",Th,u,v,dataname ="u v");

}
